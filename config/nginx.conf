
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include  /etc/nginx/mime.types;

  server {
	listen 80 default_server;
    listen [::]:80;
    server_name localhost;
	client_max_body_size 6M;

	location / {
		proxy_pass http://faketerest:3000;
		proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
			
	}


	location /_next/webpack-hmr {
	     proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection $http_connection;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
            proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
            proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 900;
            client_max_body_size 0;
            proxy_buffering off;
            add_header X-Accel-Buffering no;
            proxy_pass http://faketerest:3000/_next/webpack-hmr;
	}
	
	location /pager {
		proxy_pass http://pager:3003;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}
		
	location /pager-connect {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;

      proxy_pass http://pager:3003;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
	
	location /static-box {
		alias /static-box;
	}

	location /public {
        alias /public;
        add_header 'Service-Worker-Allowed' '/';
    }
    
    }

}
